/**
 * Demo Mode Frontend Module
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è demo —Ä–µ–∂–∏–º–∞ –∏ UI —É–ª—É—á—à–µ–Ω–∏—è
 */

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ demo —Ä–µ–∂–∏–º–∞
const isDemoMode = () => {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get('demo') === 'true' ||
           document.cookie.includes('demo_mode=true');
};

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è demo —Ä–µ–∂–∏–º–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ ?demo=true)
const activateDemoMode = () => {
    console.log('üé≠ Demo Mode activated');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º demo –±–∞–Ω–Ω–µ—Ä
    showDemoBanner();

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π "–ª–æ–≥–∏–Ω"
    autoDemoLogin();
};

// –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–Ω–Ω–µ—Ä Demo Mode
const showDemoBanner = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –±–∞–Ω–Ω–µ—Ä
    if (document.getElementById('demo-banner')) return;

    const banner = document.createElement('div');
    banner.id = 'demo-banner';
    banner.className = 'fixed top-0 left-0 right-0 bg-gradient-to-r from-yellow-400 via-yellow-500 to-yellow-400 text-gray-900 py-2 z-50 shadow-md';
    banner.innerHTML = `
        <div class="container mx-auto px-4 flex items-center justify-between">
            <div class="flex items-center gap-2">
                <span class="text-xl">üé≠</span>
                <span class="font-bold text-sm uppercase tracking-wide">Demo Mode</span>
                <span class="hidden sm:inline text-sm opacity-80">‚Äî Exploring with sample data</span>
            </div>
            <button onclick="exitDemoMode()" class="px-3 py-1 bg-gray-900 text-yellow-400 rounded text-xs font-semibold hover:bg-gray-800 transition-colors">
                Exit Demo
            </button>
        </div>
    `;

    document.body.prepend(banner);

    // –°–¥–≤–∏–≥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–Ω–∏–∑, —á—Ç–æ–±—ã –±–∞–Ω–Ω–µ—Ä –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª
    document.body.style.paddingTop = '40px';
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥–∏–Ω –¥–ª—è demo
const autoDemoLogin = async () => {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ "–∑–∞–ª–æ–≥–∏–Ω–µ–Ω" —á–µ—Ä–µ–∑ middleware
        const response = await fetch('/auth/user');

        if (response.ok) {
            const data = await response.json();

            if (data.authenticated && data.user) {
                console.log('‚úÖ Demo user authenticated:', data.user.email);

                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º demo wallet
                window.userAddress = '0xdE3089c44de71234567890123456789012345678';

                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å demo –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                if (typeof initializeApp === 'function') {
                    await initializeApp(data.user);
                }

                // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏
                if (typeof loadTasks === 'function') {
                    await loadTasks();
                }

                return data.user;
            }
        }
    } catch (error) {
        console.error('Demo login failed:', error);
    }
};

// –í—ã—Ö–æ–¥ –∏–∑ demo —Ä–µ–∂–∏–º–∞
const exitDemoMode = async () => {
    try {
        // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ demo (–æ—á–∏—â–∞–µ—Ç session –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
        await fetch('/api/demo/exit', {
            method: 'POST',
            credentials: 'include'
        });
    } catch (error) {
        console.error('Failed to exit demo mode:', error);
    }

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ demo cookies –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    document.cookie = 'demo_mode=; path=/; max-age=0';
    document.cookie = 'agentbounty_session=; path=/; max-age=0';

    // –û—á–∏—â–∞–µ–º localStorage
    localStorage.removeItem('demo_mode');

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    window.location.href = '/';
};

// –î–æ–±–∞–≤–∏—Ç—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
const addDemoWatermark = (element) => {
    if (!isDemoMode()) return;

    const watermark = document.createElement('div');
    watermark.className = 'text-xs text-gray-400 italic mt-2 border-t border-gray-200 pt-2';
    watermark.textContent = 'üé≠ Demo Mode - Sample data';

    element.appendChild(watermark);
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (isDemoMode()) {
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', activateDemoMode);
    } else {
        activateDemoMode();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ window –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.isDemoMode = isDemoMode;
window.activateDemoMode = activateDemoMode;
window.exitDemoMode = exitDemoMode;
window.addDemoWatermark = addDemoWatermark;
