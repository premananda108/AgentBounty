"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π HTTP MCP —Å–µ—Ä–≤–µ—Ä
–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫: advanced_http_server.py
"""

from mcp.server.fastmcp import FastMCP, Context
from mcp.server.session import ServerSession
import asyncio

# –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–µ—Ä
mcp = FastMCP(
    name="AdvancedHTTPServer",
    instructions="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π HTTP —Å–µ—Ä–≤–µ—Ä —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
)

@mcp.tool()
async def long_calculation(
    n: int,
    ctx: Context[ServerSession, None]
) -> str:
    """–î–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
    await ctx.info(f"–ù–∞—á–∏–Ω–∞—é –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è n={n}")

    total_steps = 10
    result = 0

    for i in range(total_steps):
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É
        await asyncio.sleep(0.5)
        result += i * n

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        progress = (i + 1) / total_steps
        await ctx.report_progress(
            progress=progress,
            total=1.0,
            message=f"–®–∞–≥ {i + 1}/{total_steps}"
        )
        await ctx.debug(f"–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

    await ctx.info("–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    return f"–ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}"

@mcp.tool()
def factorial(n: int) -> int:
    """–í—ã—á–∏—Å–ª—è–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞"""
    if n < 0:
        raise ValueError("–§–∞–∫—Ç–æ—Ä–∏–∞–ª –æ–ø—Ä–µ–¥–µ–ª—ë–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª")
    if n == 0 or n == 1:
        return 1
    result = 1
    for i in range(2, n + 1):
        result *= i
    return result

@mcp.tool()
def fibonacci(n: int) -> list[int]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –§–∏–±–æ–Ω–∞—á—á–∏ –¥–ª–∏–Ω–æ–π n"""
    if n <= 0:
        return []
    if n == 1:
        return [0]

    fib = [0, 1]
    for i in range(2, n):
        fib.append(fib[i-1] + fib[i-2])
    return fib

@mcp.resource("data://stats")
def get_stats() -> str:
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    import datetime
    return f"""
    –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    ==================
    –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
    –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: 4
    –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω ‚úÖ
    """

if __name__ == "__main__":
    import sys

    # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    port = int(sys.argv[1]) if len(sys.argv) > 1 else 8000

    print(f"üöÄ –ó–∞–ø—É—Å–∫ HTTP MCP —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
    print(f"üìç URL: http://localhost:{port}/mcp")
    print("üìù –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–∞
    mcp.settings.port = port

    # –ó–∞–ø—É—Å–∫
    mcp.run(transport="streamable-http")
